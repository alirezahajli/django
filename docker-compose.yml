version: '3.8'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  postgres:
    container_name: postgresql_db
    image: postgres:13.0-alpine
    restart: on-failure
    ports:
      - 5432:5432
    volumes:
      - ./postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - main

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - ./pg:/var/lib/postgresql/data
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
      - PGADMIN_LISTEN_PORT=5051
    ports:
      - 5050:5051
    depends_on:
      - postgres

  celery-worker:
    build: .
    container_name: celery-worker
    command: celery -A tgju worker -l INFO
    volumes:
      - .:/home/app/web/
    depends_on:
      - web
      - rabbitmq
      - postgres
    environment:
      - CELERY_BROKER_URL=${BROKER_URL}
    restart: on-failure
    networks:
      - main

  celery-beat:
    build: .
    container_name: celery-beat
    command: celery -A tgju beat -l info --scheduler django_celery_beat.schedulers:DatabaseScheduler
    volumes:
      - .:/home/app/web/
    depends_on:
      - web
      - rabbitmq
      - postgres
    environment:
      - CELERY_BROKER_URL=${BROKER_URL}
    restart: on-failure
    networks:
      - main

  web:
    build: .
    user: root
    container_name: web
    command: >
      sh -c "python3 manage.py makemigrations && python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/home/app/web/
      - static_volume:/home/app/web/staticfiles
    depends_on:
      - rabbitmq
      - postgres
    ports:
      # - 5665:5665
      - 8000:8000
    restart: always
    networks:
      - main

  nginx:
    build: ./nginx
    volumes:
      - static_volume:/home/app/web/staticfiles
    ports:
      - 1337:80
    depends_on:
      - web

networks:
  main:

volumes:
  postgres:
  pg:
  static_volume:
