services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    networks:
      - main
    ports:
      - "5672:5672"
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      - postgres_DB=my_db
      - postgres_USER=my_db
      - postgres_PASSWORD=db_1234
    networks:
      - main
    ports:
      - "5432:5432"
    restart: on-failure
    volumes:
      - postgres_data:/var/lib/postgresql/data

  celery_worker:
    container_name: celery_worker
    command: "celery -A tgju worker -l INFO"
    depends_on:
      - app
      - rabbitmq
    build: .
    environment:
      CELERY_BROKER_URL: 'amqp://guest:guest@rabbitmq:5672'
    restart: on-failure

    networks:
      - main

  celery-beat:
    depends_on:
      - app
      - rabbitmq
    build:
      context: .
    environment:
      CELERY_BROKER_URL: 'amqp://guest:guest@rabbitmq:5672'
    command: ["celery", "-A", "tgju", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]

    restart: on-failure
    networks:
      - main

  app:
    build: .
    container_name: app
    command: ["python3", "manage.py", "runserver", "0.0.0.0:8000"]

    depends_on:
      - rabbitmq
    expose:
      - "8000"
    restart: always
    networks:
      - main


networks:
  main:
